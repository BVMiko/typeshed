from _typeshed import Incomplete

from authlib.oauth2 import ResourceProtector as _ResourceProtector
from authlib.oauth2.rfc6750 import BearerTokenValidator as _BearerTokenValidator

class ResourceProtector(_ResourceProtector):
    def acquire_token(self, request, scopes: Incomplete | None = None, **kwargs): ...
    def __call__(self, scopes: Incomplete | None = None, optional: bool = False, **kwargs): ...

class BearerTokenValidator(_BearerTokenValidator):
    token_model: Incomplete
    def __init__(self, token_model, realm: Incomplete | None = None, **extra_attributes) -> None: ...
    def authenticate_token(self, token_string): ...

def return_error_response(error): ...
