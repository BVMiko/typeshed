from _typeshed import Incomplete

from authlib.oauth1 import AuthorizationServer as _AuthorizationServer

log: Incomplete

class AuthorizationServer(_AuthorizationServer):
    app: Incomplete
    query_client: Incomplete
    token_generator: Incomplete
    def __init__(
        self, app: Incomplete | None = None, query_client: Incomplete | None = None, token_generator: Incomplete | None = None
    ) -> None: ...
    SUPPORTED_SIGNATURE_METHODS: Incomplete
    def init_app(self, app, query_client: Incomplete | None = None, token_generator: Incomplete | None = None) -> None: ...
    def register_hook(self, name, func) -> None: ...
    def create_token_generator(self, app): ...
    def get_client_by_id(self, client_id): ...
    def exists_nonce(self, nonce, request): ...
    def create_temporary_credential(self, request): ...
    def get_temporary_credential(self, request): ...
    def delete_temporary_credential(self, request): ...
    def create_authorization_verifier(self, request): ...
    def create_token_credential(self, request): ...
    def check_authorization_request(self): ...
    def create_authorization_response(self, request: Incomplete | None = None, grant_user: Incomplete | None = None): ...
    def create_token_response(self, request: Incomplete | None = None): ...
    def create_oauth1_request(self, request): ...
    def handle_response(self, status_code, payload, headers): ...
