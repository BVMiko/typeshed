from _typeshed import Incomplete

from authlib.oauth2 import AuthorizationServer as _AuthorizationServer

class AuthorizationServer(_AuthorizationServer):
    def __init__(
        self, app: Incomplete | None = None, query_client: Incomplete | None = None, save_token: Incomplete | None = None
    ) -> None: ...
    scopes_supported: Incomplete
    def init_app(self, app, query_client: Incomplete | None = None, save_token: Incomplete | None = None) -> None: ...
    def query_client(self, client_id): ...
    def save_token(self, token, request): ...
    def get_error_uri(self, request, error): ...
    def create_oauth2_request(self, request): ...
    def create_json_request(self, request): ...
    def handle_response(self, status_code, payload, headers): ...
    def send_signal(self, name, *args, **kwargs) -> None: ...
    def create_bearer_token_generator(self, config): ...

def create_token_expires_in_generator(expires_in_conf: Incomplete | None = None): ...
def create_token_generator(token_generator_conf, length: int = 42): ...
